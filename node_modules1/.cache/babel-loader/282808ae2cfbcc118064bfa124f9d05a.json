{"remainingRequest":"/Users/dancamp/Desktop/vuejs/delpage/node_modules/babel-loader/lib/index.js!/Users/dancamp/Desktop/vuejs/delpage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dancamp/Desktop/vuejs/delpage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dancamp/Desktop/vuejs/delpage/src/views/Blogs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dancamp/Desktop/vuejs/delpage/src/views/Blogs.vue","mtime":1614283508960},{"path":"/Users/dancamp/Desktop/vuejs/delpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dancamp/Desktop/vuejs/delpage/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dancamp/Desktop/vuejs/delpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dancamp/Desktop/vuejs/delpage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9kYW5jYW1wL0Rlc2t0b3AvdnVlanMvZGVscGFnZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnYmxvZ3MnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0YWdzVGV4dDogewogICAgICAgIGNhbGxpbmdfc3Bpcml0czogewogICAgICAgICAgY29sb3I6ICcjODAwMDAwJywKICAgICAgICAgIHRleHQ6ICdsaWdodCcKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGNvbnRlbnQ6IHt9CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgYWRkQ29udGVudDogZnVuY3Rpb24gYWRkQ29udGVudCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGRhdGEsIG9iamV0bzsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCdodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMnKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgb2JqZXRvID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKG9iamV0byk7CiAgICAgICAgICAgICAgICBfdGhpcy5jb250ZW50ID0gb2JqZXRvOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCAxMV1dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5hZGRDb250ZW50KCk7CiAgfQp9Ow=="},{"version":3,"sources":["Blogs.vue"],"names":[],"mappings":";;;;;;;;;;AAQA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AACA,QAAA,eAAA,EAAA;AACA,UAAA,KAAA,EAAA,SADA;AAEA,UAAA,IAAA,EAAA;AAFA;AADA,OADA;AAOA,MAAA,OAAA,EAAA;AAPA,KAAA;AASA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,4CAAA,CAFA;;AAAA;AAEA,gBAAA,IAFA;AAAA;AAAA,uBAGA,IAAA,CAAA,IAAA,EAHA;;AAAA;AAGA,gBAAA,MAHA;AAIA,gBAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,gBAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AALA;AAAA;;AAAA;AAAA;AAAA;AAOA,gBAAA,OAAA,CAAA,GAAA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAVA,GAbA;AAyBA,EAAA,OAzBA,qBAyBA;AACA,SAAA,UAAA;AAEA;AA5BA,CAAA","sourcesContent":["<template>\n<div id=\"blogs\">\n    \n</div>\n\n</template>\n\n<script>\nexport default {\n    name: 'blogs',\n    data() {\n        return{\n         tagsText: {\n           calling_spirits: {\n                color: '#800000',\n                text: 'light'\n            }\n        },\n        content: {},\n        }\n    },\n    methods: {\n        async addContent(){   \n            try {\n            const data = await fetch('https://jsonplaceholder.typicode.com/posts')\n            const objeto = await data.json()\n            console.log(objeto)\n            this.content = objeto\n            } catch (error) {\n            console.log(error)\n            }\n        }\n    },\n    created(){\n        this.addContent()\n\n    }\n}\n</script>\n\n<style>\n#blogs{\n    max-width: 800px;\n    margin: 0 auto;\n}\n.item{\n    padding: 20px;\n    margin: 20px;\n    box-sizing: border-box;\n    background: #eee;\n}\n</style>"],"sourceRoot":"src/views"}]}