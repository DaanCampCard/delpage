{"remainingRequest":"/Users/dancamp/Desktop/vuejs/delpage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dancamp/Desktop/vuejs/delpage/src/views/Blogs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dancamp/Desktop/vuejs/delpage/src/views/Blogs.vue","mtime":1614283508960},{"path":"/Users/dancamp/Desktop/vuejs/delpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dancamp/Desktop/vuejs/delpage/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dancamp/Desktop/vuejs/delpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dancamp/Desktop/vuejs/delpage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdibG9ncycsCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybnsKICAgICAgICAgdGFnc1RleHQ6IHsKICAgICAgICAgICBjYWxsaW5nX3NwaXJpdHM6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiAnIzgwMDAwMCcsCiAgICAgICAgICAgICAgICB0ZXh0OiAnbGlnaHQnCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNvbnRlbnQ6IHt9LAogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgYXN5bmMgYWRkQ29udGVudCgpeyAgIAogICAgICAgICAgICB0cnkgewogICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cycpCiAgICAgICAgICAgIGNvbnN0IG9iamV0byA9IGF3YWl0IGRhdGEuanNvbigpCiAgICAgICAgICAgIGNvbnNvbGUubG9nKG9iamV0bykKICAgICAgICAgICAgdGhpcy5jb250ZW50ID0gb2JqZXRvCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKICAgIGNyZWF0ZWQoKXsKICAgICAgICB0aGlzLmFkZENvbnRlbnQoKQoKICAgIH0KfQo="},{"version":3,"sources":["Blogs.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Blogs.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div id=\"blogs\">\n    \n</div>\n\n</template>\n\n<script>\nexport default {\n    name: 'blogs',\n    data() {\n        return{\n         tagsText: {\n           calling_spirits: {\n                color: '#800000',\n                text: 'light'\n            }\n        },\n        content: {},\n        }\n    },\n    methods: {\n        async addContent(){   \n            try {\n            const data = await fetch('https://jsonplaceholder.typicode.com/posts')\n            const objeto = await data.json()\n            console.log(objeto)\n            this.content = objeto\n            } catch (error) {\n            console.log(error)\n            }\n        }\n    },\n    created(){\n        this.addContent()\n\n    }\n}\n</script>\n\n<style>\n#blogs{\n    max-width: 800px;\n    margin: 0 auto;\n}\n.item{\n    padding: 20px;\n    margin: 20px;\n    box-sizing: border-box;\n    background: #eee;\n}\n</style>"]}]}